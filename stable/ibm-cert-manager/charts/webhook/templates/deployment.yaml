apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ include "webhook.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "webhook.name" . }}
    chart: {{ include "webhook.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "webhook.name" . }}
      release: {{ .Release.Name }}
  {{- with .Values.strategy }}
  strategy:
    {{- . | toYaml | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        k8s-app: "cert-manager-webhook"
        chart: {{ template "webhook.chart" . }}
        heritage: {{ .Release.Service }}
        app: {{ include "webhook.name" . }}
        release: {{ .Release.Name }}
      annotations:
        productID: "9191919193"
        productName: {{ .Chart.Name | quote }}
        productVersion: {{ .Chart.Version | quote }}
      {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "webhook.serviceAccountName" . }}
      {{- if .Values.global.priorityClassName }}
      priorityClassName: {{ .Values.global.priorityClassName | quote }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - --v=12
          - --secure-port=1443
          - --tls-cert-file=/certs/tls.crt
          - --tls-private-key-file=/certs/tls.key
        {{- if .Values.extraArgs }}
{{ toYaml .Values.extraArgs | indent 10 }}
        {{- end }}
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TMPDIR
            value: "/home/webhook/tmp"
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - pgrep webhook -l
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["sh", "-c", "exec echo start cert-manager webhook"]
            initialDelaySeconds: 10
            timeoutSeconds: 2
          resources:
{{ toYaml .Values.resources | indent 12 }}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
            readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
          resources:
            limits:
              memory: "300Mi"
              cpu: "200m"
            requests:
              memory: "150Mi"
              cpu: "100m"          
          volumeMounts:
          - name: certs
            mountPath: /certs
      volumes:
      - name: certs
        secret:
          secretName: {{ include "webhook.servingCertificate" . }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
      hostNetwork: true
{{- if .Values.podDnsPolicy }}
      dnsPolicy: {{ .Values.podDnsPolicy }}
{{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
